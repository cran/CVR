// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// cvrsolver
Rcpp::List cvrsolver(arma::mat Y, Rcpp::List Xlist, int rank, double eta, arma::vec Lam, std::string family, Rcpp::List Wini, std::string penalty, Rcpp::List opts);
RcppExport SEXP CVR_cvrsolver(SEXP YSEXP, SEXP XlistSEXP, SEXP rankSEXP, SEXP etaSEXP, SEXP LamSEXP, SEXP familySEXP, SEXP WiniSEXP, SEXP penaltySEXP, SEXP optsSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type Xlist(XlistSEXP);
    Rcpp::traits::input_parameter< int >::type rank(rankSEXP);
    Rcpp::traits::input_parameter< double >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Lam(LamSEXP);
    Rcpp::traits::input_parameter< std::string >::type family(familySEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type Wini(WiniSEXP);
    Rcpp::traits::input_parameter< std::string >::type penalty(penaltySEXP);
    Rcpp::traits::input_parameter< Rcpp::List >::type opts(optsSEXP);
    rcpp_result_gen = Rcpp::wrap(cvrsolver(Y, Xlist, rank, eta, Lam, family, Wini, penalty, opts));
    return rcpp_result_gen;
END_RCPP
}
